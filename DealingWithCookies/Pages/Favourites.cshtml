@page "/Favourites"
@using System.Text.Json;
@using System.Web;
@model DealingWithCookies.Pages.FavouritesModel
@{
}
@Html.AntiForgeryToken()
<h1>Favourite Feeds</h1>
<p id="message"></p>

@if (string.IsNullOrEmpty(Request.Cookies["favourites"]))
{
    <p id="message">No favourite feeds selected.</p>
}
else
{
    @foreach (var feedLink in Model.FavouriteFeedList)
    {
        <div id="card"  @(feedLink.Visible ? "" : "style=\"display:none;\"")>
            <div class="card-body" style="background-color:aliceblue;">
               <div class="title-section" style="display:flex; justify-content:space-between">
                   <h4>@feedLink.FeedTitle</h4>
                    <form id="myFavouritesForm">
                        <button type="button" class="btn btn-orange" onclick="UnstarData('@feedLink.FeedTitle','@feedLink.FeedLink',this)" style="font-size:15px; color:white">unstar</button>
                            <style>
                                .btn-orange {
                                    background-color: orange;
                                    color: black;
                                }
                            </style>
                        </form>
               </div>
                    <a asp-page="/Feed" asp-route-message="@feedLink.FeedLink" target="_blank">
                        <button type="submit" class="btn btn-primary" style="background-color: darkblue">Link</button>
                    </a>
           </div>
       </div>
       <br />
    }
}
@section Scripts
    {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        async function antiforgeryToken() {
            var response = await fetch("/antiforgerytoken", {
                method: "GET",
                credentials: 'include'
            });
            if (response.ok) {
                const xsrfToken = document.cookie
                    .split("; ")
                    .find(row => row.startsWith("XSRF-TOKEN="))
                    .split("=")[1];
                return xsrfToken;
            }
            else {
                return null;
            }
        }
        async function UnstarData(feedTitle, link, button) {
            const data = {
                feedTitle: feedTitle,
                feedLink: link
            }
            var token = await antiforgeryToken();
            fetch('/Unfav', {
                method: 'POST',
                headers: {
                    "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val(),
                    "Content-Type": 'application/json',
                    "X-XSRF-TOKEN": token
                },
                body: JSON.stringify(data)
            }).then(response => response.json())
                .then(data => {
                    console.log(data.message);
                    const clickedButton = button.closest("button");
                    const card = clickedButton.closest("#card");
                    if (card) {
                        card.style.display = "none";
                    }
                }).catch(error => console.error(error));
        }
    </script>
 }
